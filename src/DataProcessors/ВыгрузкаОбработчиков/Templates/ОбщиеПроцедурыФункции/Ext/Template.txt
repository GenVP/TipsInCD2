#Область Шапка
////////////////////////////////////////////////////////////////////////////////
// [СтрокаИдентификатора                                                                                                                                                                            ]
// 
// Данный модуль содержит экспортные процедуры обработчиков событий конвертации 
// и предназначен для отладки правил обмена. После отладки рекомендуется
// скопировать текст модуля в буфер обмена и импортировать его в базу
// "Конвертация данных".
//
////////////////////////////////////////////////////////////////////////////////
// ИСПОЛЬЗУЕМЫЕ СОКРАЩЕНИЯ ИМЕН ПЕРЕМЕННЫХ (АББРЕВИАТУРЫ)
//
//  ПКО  - правило конвертации объектов
//  ПКС  - правило конвертации свойств объектов
//  ПКГС - правило конвертации группы свойств объектов
//  ПВД  - правило выгрузки данных
//  ПОД  - правило очистки данных

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ОБРАБОТКИ
// Данный раздел изменять запрещено.

Перем Параметры;
Перем Алгоритмы;
Перем Запросы;
Перем УзелДляОбмена;
Перем ОбщиеПроцедурыФункции;

#Область Конвертация_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ (ГЛОБАЛЬНЫЕ)
// В данном разделе разрешено изменять реализацию процедур.

#Область ПКО_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

#Область ПКС_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

#Область ПКГС_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОНВЕРТАЦИИ ГРУПП СВОЙСТВ ОБЪЕКТОВ
// В данном разделе разрешено изменять реализацию процедур.

#Область ПВД_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ВЫГРУЗКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

#Область ПОД_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЧИСТКИ ДАННЫХ
// В данном разделе разрешено изменять реализацию процедур.

#Область Параметры_Комментарий
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПАРАМЕТРОВ
// В данном разделе разрешено изменять реализацию процедур.

#Область Алгоритмы_Комментарий
////////////////////////////////////////////////////////////////////////////////
// АЛГОРИТМЫ
// Данный раздел разрешено изменять.
// Также допустимо размещать процедуры с алгоритмами в любом из разделов выше.

#Область ОбщиеПроцедурыФункции_Комментарий
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
// Данный раздел изменять запрещено.

#Область ВыгрузитьПоПравилу
// Производит выгрузку объекта в соответствии с указанным правилом конвертации
//
// Параметры:
//  Источник				 - произвольный источник данных
//  Приемник				 - xml-узел объекта приемника
//  ВходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилу
//                             для выполнения конвертации
//  ИсходящиеДанные			 - произвольные вспомогательные данные, передаваемые правилам
//                             конвертации свойств
//  ИмяПКО					 - имя правила конвертации, согласно которому осуществляется выгрузка
//
// Возвращаемое значение:
//  xml-узел ссылки или значение приемника
//
Функция ВыгрузитьПоПравилу(Источник					= Неопределено,
						   Приемник					= Неопределено,
						   ВходящиеДанные			= Неопределено,
						   ИсходящиеДанные			= Неопределено,
						   ИмяПКО					= "")
						   
	Возврат ОбщиеПроцедурыФункции.ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО);

КонецФункции

#Область УстановитьОбменДаннымиЗагрузка
// Устанавливает значение параметра "Загрузка" для свойства объекта "ОбменДанными".
//
// Параметры:
//  Объект   - объект, для которого устанавливается свойство
//  Значение - значение устанавливаемого свойства "Загрузка"
// 
Процедура УстановитьОбменДаннымиЗагрузка(Объект, Значение = Истина, Знач ОтправкаНазад = Ложь)

	ОбщиеПроцедурыФункции.УстановитьОбменДаннымиЗагрузка(Объект, Значение, ОтправкаНазад);
	
КонецПроцедуры

#Область ЗаписатьОбъектВИБ
// Записывает объект в информационную базу.
//
// Параметры:
//	Объект - Записываемый объект.
//	Тип - Строка - Тип объекта строкой.
// 
Процедура ЗаписатьОбъектВИБ(Объект, Тип, ЗаписатьОбъект = Ложь, Знач ОтправкаНазад = Ложь)

	ОбщиеПроцедурыФункции.ЗаписатьОбъектВИБ(Объект, Тип, ЗаписатьОбъект, ОтправкаНазад);
	
КонецПроцедуры

#Область ОтменитьПроведениеОбъектаВИБ
// Отменяет проведение объекта в информационной базе.
//
// Параметры:
//	Объект - Объект для отмены проведения.
//	Тип - Строка - Тип объекта строкой.
//
Процедура ОтменитьПроведениеОбъектаВИБ(Объект, Тип, ЗаписатьОбъект = Ложь)

	ОбщиеПроцедурыФункции.ОтменитьПроведениеОбъектаВИБ(Объект, Тип, ЗаписатьОбъект);
	
КонецПроцедуры

#Область ВыгрузитьРегистр
// Выгружает регистр по отбору.
// 
// Парметры:
//	НаборЗаписейДляВыгрузки - Структура или НаборЗаписей - Отбор
//
Процедура ВыгрузитьРегистр(НаборЗаписейДляВыгрузки, 
							Правило = Неопределено, 
							ВходящиеДанные = Неопределено, 
							НеВыгружатьОбъектыПоСсылкам = Ложь, 
							ИмяПКО = "",
							ПравилоВыгрузкиДанных = Неопределено)
							
	ОбщиеПроцедурыФункции.ВыгрузитьРегистр(НаборЗаписейДляВыгрузки, Правило, ВходящиеДанные, НеВыгружатьОбъектыПоСсылкам, ИмяПКО, ПравилоВыгрузкиДанных);

КонецПроцедуры

#Область РежимЗагрузкиДанныхВИнформационнуюБазу
// Признак того, что это загрузка в информационную базу.
// 
// Возвращаемое значение:
//	Булево - Признак режима загрузки данных
// 
Функция РежимЗагрузкиДанныхВИнформационнуюБазу()
	
	Возврат ОбщиеПроцедурыФункции.РежимЗагрузкиДанныхВИнформационнуюБазу();
	
КонецФункции

#Область УстановитьПометкуУдаленияУОбъекта
// Устанавливает пометку удаления.
//
// Параметры:
//	Объект - Объект для установки пометки.
//	ПометкаУдаления - Булево - Флаг пометки удаления.
//	ИмяТипаОбъекта - Строка - Тип объекта строкой.
//
Процедура УстановитьПометкуУдаленияУОбъекта(Объект, ПометкаУдаления, ИмяТипаОбъекта)
	
	ОбщиеПроцедурыФункции.УстановитьПометкуУдаленияУОбъекта(Объект, ПометкаУдаления, ИмяТипаОбъекта);
	
КонецПроцедуры

#Область ЗаписатьВФайлУдалениеОбъекта
// Создает в файле обмена запись об удалении объекта.
//
// Параметры:
//	Ссылка - Ссылка на удаляемый объект.
//	ТипПриемника - Строка - Содрежит строковое представление типа приемника.
//	ТипИсточника - Строка - Содрежит строковое представление типа источника.
// 
Процедура ЗаписатьВФайлУдалениеОбъекта(Ссылка, Знач ТипПриемника, Знач ТипИсточника)
	
	ОбщиеПроцедурыФункции.ЗаписатьВФайлУдалениеОбъекта(Ссылка, ТипПриемника, ТипИсточника);
	
КонецПроцедуры

#Область ВыгрузитьИнформациюОТипах
// Добавляет в xml файл информацию о типах значения
//
// Параметры:
//	Приемник - xml-узел объекта приемника
//	Тип - Строка - выгружаемый тип
//		- Массив - содержит список выгружаемых строковых типов
//	СписокАтрибутов - Структура - Ключ содержит имя атрибута
//
Процедура ВыгрузитьИнформациюОТипах(Приемник, Тип, СписокАтрибутов = Неопределено) Экспорт
	
	ОбщиеПроцедурыФункции.ВыгрузитьИнформациюОТипах(Приемник, Тип, СписокАтрибутов);
	
КонецПроцедуры

#Область ЗарегистрироватьОбъектСозданныйПриВыгрузке
// Регистрирует объект, созданный при выгрузке.
//
// Параметры:
//	Ссылка - Ссылка на регистрируемый объект.
// 
Процедура ЗарегистрироватьОбъектСозданныйПриВыгрузке(Ссылка)
	
	ОбщиеПроцедурыФункции.ЗарегистрироватьОбъектСозданныйПриВыгрузке(Ссылка);
	
КонецПроцедуры

#Область ЗарегистрироватьПредупреждение
// Регистрирует предупреждение в журнале регистрации.
// Если в процессе обмена данными было обращение к этой процедуре, то обмен данными остановлен не будет.
// После завершения обмена статус выполнения обмена в мониторе для пользователя будет иметь значение "Предупреждение", если не было ошибок.
//
// Параметры:
//  Предупреждение - Строка. Текст предупреждения, который надо зарегистрировать.
// Информация, предупреждения и ошибки, возникающие в процессе обмена данными регистрируются в журнале регистрации.
// 
Процедура ЗарегистрироватьПредупреждение(Предупреждение)
	
	ОбщиеПроцедурыФункции.ЗарегистрироватьПредупреждение(Предупреждение);
	
КонецПроцедуры

#Область ПодключитьОбработкуДляОтладки
// Служебная. Инициализирует переменные, необходимые для отладки
//
// Параметры:
//  Владелец - Обработка КонвертацияОбъектовИнформационныхБаз
//
Процедура ПодключитьОбработкуДляОтладки(Владелец) Экспорт

	Параметры            	 = Владелец.Параметры;
	ОбщиеПроцедурыФункции	 = Владелец;
	Запросы              	 = Владелец.Запросы;
	УзелДляОбмена		 	 = Владелец.УзелДляОбмена;

КонецПроцедуры

