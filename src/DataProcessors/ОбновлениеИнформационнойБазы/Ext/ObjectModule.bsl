
Процедура ВыполнитьОбработчикиОбновления(ВерсияКонфигурации)
	
	Если ВерсияКонфигурации = "2.1.5.1" Тогда
		
		ОбработчикиОбновления_2_1_5_1();
		
	ИначеЕсли ВерсияКонфигурации = "2.1.6.1" Тогда
		
		ОбработчикиОбновления_2_1_6_1();
		
	ИначеЕсли ВерсияКонфигурации = "2.1.7.1" Тогда
		
		ОбработчикиОбновления_2_1_7_1();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, ВерсияИсходная, ВерсияКонечная, НомерОбластиВМекете)
	
	Если Константы.НомерВерсииКонфигурации.Получить() = ВерсияИсходная Тогда
		
		НачатьТранзакцию();
		
		Попытка
			
			ВыполнитьОбработчикиОбновления(ВерсияКонечная);
			
			// Установка номера версии информационной базы
			Константы.НомерВерсииКонфигурации.Установить(ВерсияКонечная);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , ,
						"Выполнено обновление информационной базы с версии """ + ВерсияИсходная + """ на версию """ + ВерсияКонечная + """");
			//
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
		КонецПопытки;
		ЗафиксироватьТранзакцию();
		
		Если Константы.НомерВерсииКонфигурации.Получить() = ВерсияКонечная Тогда
			
			Сообщить("Выполнено обновление информационной базы с версии """ + ВерсияИсходная + """ на версию """ + ВерсияКонечная + """" + Символы.ПС, СтатусСообщения.Информация);
			ВывестиОписаниеИзменений(НомерОбластиВМекете, ДокументОписаниеОбновлений, МакетОписаниеОбновлений);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОбновление() Экспорт
	
	// Подготовка к выводу формы описания обновлений.

	ФормаОписаниеОбновлений    = ПолучитьФорму("ОписаниеОбновлений");
	МакетОписаниеОбновлений    = ПолучитьМакет("ОписаниеОбновлений");;
	ДокументОписаниеОбновлений = ФормаОписаниеОбновлений.ЭлементыФормы.ДокументОписаниеОбновлений;
	ДокументОписаниеОбновлений.Очистить();

	// Обновление информационной базы.
	// Последовательно вызываются функции для обновления с соответствующей версии.

	//Вызов функций заполнения данных для пустой информационной базы
	ТекущийНомерКонстанты = Константы.НомерВерсииКонфигурации.Получить();
	
	ДлинаТекущегоНомера = СтрДлина(ТекущийНомерКонстанты);
	
	ПервыеСимволыНомера = Сред(ТекущийНомерКонстанты, 1, 2);
	Если ПервыеСимволыНомера = "8."
		ИЛИ ПустаяСтрока(ТекущийНомерКонстанты)
		ИЛИ ДлинаТекущегоНомера < 7 Тогда
		
		Константы.НомерВерсииКонфигурации.Установить("2.0.28.1");
		
	КонецЕсли;
	
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.0.28.1", "2.1.1.1",  "2101");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.1.1",  "2.1.2.1",  "2102");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.2.1",  "2.1.3.1",  "2103");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.3.1",  "2.1.4.1",  "2104");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.4.1",  "2.1.5.1",  "2105");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.5.1",  "2.1.6.1",  "2106");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.6.1",  "2.1.6.2",  "2162");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.6.2",  "2.1.6.4",  "2164");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.6.4",  "2.1.6.5",  "2165");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.6.5",  "2.1.7.1",  "2171");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.7.1",  "2.1.8.1",  "2181");
	ВыполнитьПростоеОбновлениеВерсии(ДокументОписаниеОбновлений, МакетОписаниеОбновлений, "2.1.8.1",  "2.1.8.2",  "2182");
	
	// Вывод формы описания обновлений
	Если ДокументОписаниеОбновлений.ВысотаТаблицы > 0 Тогда
		ФормаОписаниеОбновлений.Открыть();
	КонецЕсли;

КонецПроцедуры // ВыполнитьОбновление()

// Процедура выводит описания изменений в указанном релизе
//
// Параметры
//  НомерРелиза  – Строка - номер релиза, для которого выводится описание
//
Процедура ВывестиОписаниеИзменений(НомерРелиза, ДокументОписаниеОбновлений, МакетОписаниеОбновлений)
	
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Шапка" + НомерРелиза));
	ДокументОписаниеОбновлений.НачатьГруппуСтрок("Версия" + НомерРелиза);
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Версия" + НомерРелиза));
	ДокументОписаниеОбновлений.ЗакончитьГруппуСтрок();
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Отступ"));
	
КонецПроцедуры // ВывестиОписаниеИзменений()

//

Процедура ОбработчикиОбновления_2_1_5_1()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ФайлыПользователей.Пользователь,
	|	ФайлыПользователей.ТипФайла,
	|	ФайлыПользователей.ПолноеИмяФайла
	|ИЗ
	|	РегистрСведений.ФайлыПользователей КАК ФайлыПользователей
	|ГДЕ
	|	    ФайлыПользователей.ТипФайла = ""ОткрыватьПравилаОбмена""
	|	ИЛИ ФайлыПользователей.ТипФайла = ""ОткрыватьПравилаРегистрации""
	|	ИЛИ ФайлыПользователей.ТипФайла = ""ОткрыватьПриЗапускеПанельФункций""
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗначениеНастройки = Булево(Выборка.ПолноеИмяФайла);
		Исключение
			ЗначениеНастройки = Ложь;
		КонецПопытки;
		
		
		НаборЗаписей = РегистрыСведений.ФайлыПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(Выборка.Пользователь);
		НаборЗаписей.Отбор.ТипФайла.Установить(Выборка.ТипФайла);
		
		Запись = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
		Запись.ПолноеИмяФайла = "";
		Запись.ЗначениеНастройки = ЗначениеНастройки;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработчикиОбновления_2_1_6_1()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Конвертации.Ссылка Как Ссылка,
	|	Конвертации.Источник.Приложение.Ссылка Как Источник,
	|	Конвертации.Приемник.Приложение.Ссылка Как Приемник
	|ИЗ
	|	Справочник.Конвертации КАК Конвертации";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЭтоПриложение8(Выборка.Источник) И ЭтоПриложение8(Выборка.Приемник) Тогда
			
			Конвертация = Выборка.Ссылка.ПолучитьОбъект();
			Конвертация.РежимСовместимости = Перечисления.РежимСовместимости.РежимСовместимостиСБСП20;
			Конвертация.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработчикиОбновления_2_1_7_1()
	
	#Если Клиент Тогда
		Состояние("Пожалуйста, подождите, выполняется обновление информационной базы...");
	#КонецЕсли
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПравилаКонвертацииСвойств.Ссылка КАК Правило
	|ИЗ
	|	Справочник.ПравилаКонвертацииСвойств КАК ПравилаКонвертацииСвойств
	|ГДЕ
	|	(ПравилаКонвертацииСвойств.ПолучитьИзВходящихДанных = Истина
	|			ИЛИ ПравилаКонвертацииСвойств.ИмяПараметраДляПередачи <> """")";
	
	Запрос.УстановитьПараметр("Приемник", Справочники.Свойства.ПустаяСсылка());
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПКС = Выборка.Правило.ПолучитьОбъект();
		ПКС.Наименование = глНаименованиеПКС(ПКС);
		ПКС.Записать();
		
	КонецЦикла;
	
КонецПроцедуры