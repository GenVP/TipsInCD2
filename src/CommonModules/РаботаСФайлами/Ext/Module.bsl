
// Возвращает имя файла пользователя для переданного объекта
//
// Параметры:
//  Объект         - конвертация (элемент справочника "Конвертации") или
//                   конфигурация (элемент справочника "Конфигурации").
//  Пользователь   - пользователь (элемент справочника "Пользователи").
//  ТипФайла       - тип файла (строка).
//
// Возвращаемое значение: 
//  строка, содержащая имя файла.
//
Функция ПолучитьИмяФайла(Объект, Пользователь, ТипФайла = "") Экспорт

	Отбор = Новый Структура; 
	Отбор.Вставить("Пользователь", Пользователь);
	Отбор.Вставить("Объект",       Объект);
	Отбор.Вставить("ТипФайла",     ТипФайла);
	
	Возврат РегистрыСведений.ФайлыПользователей.Получить(Отбор).ПолноеИмяФайла;
	
КонецФункции // РаботаСФайлами.ПолучитьИмяФайла()

// Устанавливает имя файла пользователя для переданного объекта
//
// Параметры:
//  Объект         - конвертация (элемент справочника "Конвертации") или
//                   конфигурация (элемент справочника "Конфигурации").
//  Пользователь   - пользователь (элемент справочника "Пользователи").
//  ИмяФайла       - строка, содержащая имя файла.
//  ТипФайла       - тип файла (строка).
//
Процедура УстановитьИмяФайла(Объект, Пользователь, ИмяФайла, ТипФайла = "") Экспорт

	Запись = РегистрыСведений.ФайлыПользователей.СоздатьМенеджерЗаписи();
	Запись.Пользователь     = Пользователь;
	Запись.Объект           = Объект;
	Запись.ТипФайла         = ТипФайла;
	Запись.ПолноеИмяФайла   = СокрЛП(ИмяФайла);
	Запись.Записать();

КонецПроцедуры // РаботаСФайлами.УстановитьИмяФайла()

// Открывает окно диалога выбора XML файла.
//
// Параметры:
//  Элемент                - элемент управления, значению которого
//                           будет присвоено полное имя выбранного файла
//  ПроверятьСуществование - булево, содержит признак проверки существования выбираемого файла.
//
Процедура глВыборФайла(Элемент, ПроверятьСуществование = Ложь, Фильтр = "Файл данных (*.xml)|*.xml", 
	Расширение = "xml", Заголовок = "Выберите файл", ПолноеИмяПоУмолчанию = "") Экспорт

	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	ПроверятьСуществование;
	
	ДиалогВыбораФайла.Фильтр                      =	Фильтр;
	ДиалогВыбораФайла.Заголовок                   =	Заголовок;
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	Расширение;
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ДиалогВыбораФайла.ПолноеИмяФайла              =	Элемент.Значение;
	Иначе
		ДиалогВыбораФайла.ПолноеИмяФайла              =	ПолноеИмяПоУмолчанию;
	КонецЕсли;
		
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Элемент.Значение = ДиалогВыбораФайла.ПолноеИмяФайла;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет открытие файла с использованием ассоциированного с ним приложения.
//
// Параметры: 
//  Имя            - имя файла.
//
Процедура глОткрытьФайл(Имя, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение("explorer " + Имя);
	
КонецПроцедуры // глОткрытьФайл() 

// Открывает окно диалога выбора XML файла.
//
// Параметры:
//  Элемент                - элемент управления, значению которого
//                           будет присвоено полное имя выбранного файла
//  ПроверятьСуществование - булево, содержит признак проверки существования выбираемого файла.
//
Процедура глВыборКаталога(Элемент, ПроверятьСуществование = Ложь) Экспорт

	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораФайла.Заголовок                   =	"Выберите каталог";
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	ПроверятьСуществование;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Элемент.Значение = ДиалогВыбораФайла.Каталог;
		
	КонецЕсли;
	
КонецПроцедуры
